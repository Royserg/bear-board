import { useQuery } from '@tanstack/react-query';
import type { NextPage } from 'next';
import Image from 'next/future/image';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { BsApple, BsWindows } from 'react-icons/bs';
import { FaDownload } from 'react-icons/fa';
import { VscTerminalLinux } from 'react-icons/vsc';
import appPreview from '../../public/assets/images/app-preview.png';
import { getLatestRelease, Release } from '../api/github';
import BearBoardLogo from '../components/bear-board-logo';
import { useUserPlatform } from '../hooks';

enum AssetsPlatformIndex {
  Linux = 1,
  Mac = 3,
  Windows = 4,
}

type PlatformAssetIndex = 1 | 3 | 4;
interface AxiosError {
  message: string;
}

const Home: NextPage = () => {
  const userPlatform = useUserPlatform();

  // const [userPlatform, setUserPlatform] = useState<Platform>();
  const [platformAssetIndex, setPlatformAssetIndex] =
    useState<PlatformAssetIndex>();

  const { isLoading, error, data } = useQuery<Release, AxiosError>(
    ['releaseData'],
    getLatestRelease
  );

  useEffect(() => {
    if (userPlatform === 'Mac') {
      return setPlatformAssetIndex(3);
    }

    if (userPlatform === 'Windows') {
      return setPlatformAssetIndex(4);
    }

    if (userPlatform === 'Linux') {
      return setPlatformAssetIndex(1);
    }
  }, [userPlatform]);

  const iconClassNames = 'text-xl mr-3';
  const platformIcon = () => {
    if (userPlatform === 'Other') {
      return;
    }
    if (userPlatform === 'Windows') {
      return <BsWindows className={iconClassNames} />;
    }
    if (userPlatform === 'Mac') {
      return <BsApple className={iconClassNames} />;
    }
    if (userPlatform === 'Linux') {
      return <VscTerminalLinux className={iconClassNames} />;
    }
  };

  if (isLoading) {
    return (
      <div className='w-screen h-screen flex justify-center items-center text-2xl font-bold'>
        Loading...
      </div>
    );
  }

  if (error) {
    return (
      <div className='w-screen h-screen flex justify-center items-center text-2xl font-bold'>
        Error occurred: {error.message}
      </div>
    );
  }

  return (
    <div className='bg-slate-100'>
      <Head>
        <title>BearBoard</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='container mx-auto flex flex-col items-center min-h-screen p-4'>
        {/* Divider */}
        <div className='mt-10'></div>

        {/* Hero section */}
        <section className='flex flex-col items-center justify-center'>
          <BearBoardLogo />

          <h1 className='text-xl md:text-[3rem] leading-normal font-extrabold text-gray-700'>
            BearBoard
          </h1>
          <h3 className='text-md text-gray-600'>Cryptocurrency dashboard.</h3>

          {/* Divider */}
          <div className='mt-7'></div>

          {platformAssetIndex && (
            <div className='flex flex-col items-center'>
              <a
                href={data?.assets[platformAssetIndex]?.browser_download_url}
                className='rounded-full py-5 px-16 border-2 border-gray-500 text-gray-700 shadow-md hover:border-amber-500 hover:text-amber-500 hover:shadow-xl transition-colors flex'
              >
                {platformIcon()}
                Download
              </a>
              <a href='#all-platforms' className='mt-1 text-center text-sm'>
                Other platforms
              </a>
            </div>
          )}
        </section>

        <div className='mt-14'></div>

        {/* App Preview */}
        <section className=' w-3/4 bg-slate-100 flex justify-center items-center'>
          <Image
            className='shadow-lg'
            src={appPreview}
            alt='Main application view'
          />
        </section>

        {/* Divider */}
        <div className='mt-14'></div>

        {/* Download section */}
        {isLoading ? (
          <div>Loading...</div>
        ) : (
          <section
            id='all-platforms'
            className='w-full sm:w-full md:w-3/4 lg:w-2/4'
          >
            <h3 className='text-md text-gray-700 mb-2 font-semibold tracking-wide'>
              BearBoard: {data?.name}
            </h3>

            <div className='flex flex-col divide-y'>
              {/* MacOS */}
              {data?.assets[3] && (
                <div className={platformDownloadBoxClasses}>
                  <BsApple className={iconClassNames} />
                  <a href={data?.assets[3].browser_download_url}>
                    {data?.assets[3].name}
                  </a>
                  <a
                    href={data?.assets[3].browser_download_url}
                    className={assetDownloadBtnClasses}
                  >
                    <FaDownload className={iconClassNames} />
                    Download
                  </a>
                </div>
              )}

              {/* Windows */}
              {data?.assets[4] && (
                <div className={platformDownloadBoxClasses}>
                  <BsWindows className={iconClassNames} />
                  <a href={data?.assets[4].browser_download_url}>
                    {data?.assets[4].name}
                  </a>
                  <a
                    href={data?.assets[4].browser_download_url}
                    className={assetDownloadBtnClasses}
                  >
                    <FaDownload className={iconClassNames} />
                    Download
                  </a>
                </div>
              )}

              {/* Ubuntu */}
              {data?.assets[1] && (
                <div className={platformDownloadBoxClasses}>
                  <VscTerminalLinux className={iconClassNames} />
                  <a href={data?.assets[1].browser_download_url}>
                    {data?.assets[1].name}
                  </a>
                  <a
                    href={data?.assets[1].browser_download_url}
                    className={assetDownloadBtnClasses}
                  >
                    <FaDownload className={iconClassNames} />
                    Download
                  </a>
                </div>
              )}
            </div>
          </section>
        )}

        {/* Divider */}
        <div className='mt-10'></div>

        {/* TODO: footer */}
        {/* <footer></footer> */}
      </main>
    </div>
  );
};

const assetDownloadBtnClasses =
  'flex p-2 rounded-xl hover:text-amber-500 hover:shadow-sm transition-colors';
const platformDownloadBoxClasses = 'p-3 flex justify-between items-center';

export default Home;
